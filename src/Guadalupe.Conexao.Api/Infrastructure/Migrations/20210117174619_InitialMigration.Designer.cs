// <auto-generated />
using System;
using Guadalupe.Conexao.Api.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Guadalupe.Conexao.Api.Infrastructure.Migrations
{
    [DbContext(typeof(ConexaoContext))]
    [Migration("20210117174619_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Guadalupe.Conexao.Api.Domain.Notice", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("UNIQUEIDENTIFIER");

                    b.Property<Guid>("IdPostedBy")
                        .HasColumnName("id_posted_by")
                        .HasColumnType("UNIQUEIDENTIFIER");

                    b.Property<string>("Image")
                        .HasColumnName("image_url")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnName("message")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime?>("Modification")
                        .HasColumnName("modification_date")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Registration")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("registration_date")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("Removal")
                        .HasColumnName("removal_date")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("IdPostedBy");

                    b.ToTable("notice");
                });

            modelBuilder.Entity("Guadalupe.Conexao.Api.Domain.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("UNIQUEIDENTIFIER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Modification")
                        .HasColumnName("modification_date")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnName("nome")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("ProfileImage")
                        .HasColumnName("profile_image")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime>("Registration")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("registration_date")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("Removal")
                        .HasColumnName("removal_date")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("person");
                });

            modelBuilder.Entity("Guadalupe.Conexao.Api.Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnName("id")
                        .HasColumnType("UNIQUEIDENTIFIER");

                    b.Property<string>("CodeAccess")
                        .HasColumnName("code_access")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<Guid>("IdPerson")
                        .HasColumnName("id_person")
                        .HasColumnType("UNIQUEIDENTIFIER");

                    b.Property<DateTime?>("Modification")
                        .HasColumnName("modification_date")
                        .HasColumnType("datetime");

                    b.Property<string>("RefreshToken")
                        .HasColumnName("refresh_token")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime>("Registration")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("registration_date")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("Removal")
                        .HasColumnName("removal_date")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("IdPerson")
                        .IsUnique();

                    b.ToTable("user");
                });

            modelBuilder.Entity("Guadalupe.Conexao.Api.Domain.Notice", b =>
                {
                    b.HasOne("Guadalupe.Conexao.Api.Domain.Person", "PostedBy")
                        .WithMany()
                        .HasForeignKey("IdPostedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Guadalupe.Conexao.Api.Domain.User", b =>
                {
                    b.HasOne("Guadalupe.Conexao.Api.Domain.Person", "Person")
                        .WithOne()
                        .HasForeignKey("Guadalupe.Conexao.Api.Domain.User", "IdPerson")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
